---
import { ViewTransitions } from 'astro:transitions';
import ButtonToUp from '../components/ButtonToUp.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '@fontsource-variable/rubik';
import ButtonTheme from '../components/ButtonTheme.astro';

interface Props {
	title: string;
	era: string;
}

const { title , era } = Astro.props;
---

<!doctype html>
<html lang = "en">
	<head>
		<meta charset = "UTF-8" />
		<meta name = "description" content = "Astro description" />
		<meta name = "viewport" content = "width = device-width" />
		<link rel = "icon" type = "image/svg+xml" href = "/swifties-eras-tour/src/components/svg/Frame.svg" />
		<meta name = "generator" content = {Astro.generator} />
		
		<!-- Tipografías -->
		<link rel = "preconnect" href = "https://fonts.googleapis.com">
		<link rel = "preconnect" href = "https://fonts.gstatic.com" crossorigin>
		<link href = "https://fonts.googleapis.com/css2?family = Rubik:ital,wght@0,300..900;1,300..900&display = swap" rel = "stylesheet">
		
		<script is:inline src="https://cdn.jsdelivr.net/npm/flowbite@2.5.1/dist/flowbite.min.js"></script>

		<title>{title}</title>
		
		<ViewTransitions />
		
	</head>
	<body transition:name="body" transition:animate="fade" class:list={[
		"w-screem sm:w-full",
		{
			"dark:bg-debut-900 bg-debut-50": era === 'debut',
			"dark:bg-fearless-900 bg-fearless-50": era === 'fearless',
			"dark:bg-speakNow-900 bg-speakNow-50": era === 'speakNow',
			"dark:bg-red-900 bg-red-50": era === 'red',
			"dark:bg-1989-900 bg-1989-50": era === '1989',
			"dark:bg-reputation-900 bg-reputation-50": era === 'reputation',
			"dark:bg-lover-900 bg-lover-50": era === 'lover',
			"dark:bg-folklore-900 bg-folklore-50": era === 'folklore',
			"dark:bg-evermore-900 bg-evermore-50": era === 'evermore',
			"dark:bg-midnights-900 bg-midnights-50": era === 'midnights',
			"dark:bg-TTPD-900 bg-TTPD-50": era === 'TTPD',
			"dark:bg-mashup-900 bg-mashup-50": era === 'mashup',
		}
		]}>
		<Header era = {era}/>
		<main>
			<slot/>
		</main>
		<Footer era = {era}/>
		<ButtonToUp  era={era}/>
		<ButtonTheme era={era}/>
	</body>
</html>




<style is:global>

	html{
		scroll-behavior: smooth;
	}

	.no-scrollbar::-webkit-scrollbar {
		display: none; 
	} 

	/* ----| Tipografías |---- */
	
	.text-display-large{
		@apply font-display-large-font-family text-display-large-font-size leading-display-large-line-height font-display-large-font-weight;
		letter-spacing: var(--display-large-letter-spacing, -1px)
	}
	.text-display-medium{
		@apply  font-display-medium-font-family text-display-medium-font-size leading-display-medium-line-height font-display-medium-font-weight;
	}
	.text-display-small{
		@apply font-display-small-font-family text-display-small-font-size leading-display-small-line-height font-display-small-font-weight ;
	}



	.text-headline-large{
		@apply font-headline-large-font-family text-headline-large-font-size leading-headline-large-line-height font-headline-large-font-weight;
	}
	.text-headline-medium{
		@apply font-headline-medium-font-family text-headline-medium-font-size leading-headline-medium-line-height font-headline-medium-font-weight;
	}
	.text-headline-small{
		@apply font-headline-small-font-family text-headline-small-font-size leading-headline-small-line-height font-headline-small-font-weight;
	}



	.text-title-large{
		@apply font-title-large-font-family text-title-large-font-size leading-title-large-line-height font-title-large-font-weight;
	}
	.text-title-medium{
		@apply font-title-medium-font-family text-title-medium-font-size leading-title-medium-line-height font-title-medium-font-weight;
		letter-spacing: var(--title-medium-letter-spacing, 0.15px)
	}
	.text-title-small{
		@apply font-title-small-font-family text-title-small-font-size leading-title-small-line-height font-title-small-font-weight;
		letter-spacing: var(--title-small-letter-spacing, 0.1px)
	}



	.text-label-large{
		@apply font-label-large-font-family text-label-large-font-size leading-label-large-line-height font-label-large-font-weight;
		letter-spacing: var(--label-large-letter-spacing, 0.1px)
	}
	.text-label-medium{
		@apply font-label-medium-font-family text-label-medium-font-size leading-label-medium-line-height font-label-medium-font-weight;
		letter-spacing: var(--label-medium-letter-spacing, 0.5px)
	}
	.text-label-small{
		@apply font-label-small-font-family text-label-small-font-size leading-label-small-line-height font-label-small-font-weight;
		letter-spacing: var(--label-small-letter-spacing, 0.5px)
	}

	.text-body-large{
		@apply font-body-large-font-family text-body-large-font-size leading-body-large-line-height font-body-large-font-weight;
		letter-spacing: var(--body-large-letter-spacing, 0.5px)
	}
	.text-body-medium{
		@apply font-body-medium-font-family text-body-medium-font-size leading-body-medium-line-height font-body-medium-font-weight;
		letter-spacing: var(--body-medium-letter-spacing, 0.25px)
	}
	.text-body-small{
		@apply font-body-small-font-family text-body-small-font-size leading-body-small-line-height font-body-small-font-weight;
		letter-spacing: var(--body-small-letter-spacing, 0.4px)
	}
</style>


<script>
	var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
	var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

	// Change the icons inside the button based on previous settings
	if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
		themeToggleLightIcon?.classList.remove('hidden');
	} else {
		themeToggleDarkIcon?.classList.remove('hidden');
	}

	var themeToggleBtn = document.getElementById('theme-toggle');

	themeToggleBtn?.addEventListener('click', function() {

		// toggle icons inside button
		themeToggleDarkIcon?.classList.toggle('hidden');
		themeToggleLightIcon?.classList.toggle('hidden');

		// if set via local storage previously
		if (localStorage.getItem('color-theme')) {
			if (localStorage.getItem('color-theme') === 'light') {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			} else {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			}

		// if NOT set via local storage previously
		} else {
			if (document.documentElement.classList.contains('dark')) {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			} else {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			}
		}
		
	});
</script>

<!-- <div class="absolute inset-0 -z-10 h-full w-full items-center px-5 py-24 [background:radial-gradient(125%_125%_at_50%_10%,#000_40%,#63e_100%)]"></div> -->